---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dynamodb
  labels:
    name: dynamodb
    app: dynamodb
spec:
  revisionHistoryLimit: 1
  updateStrategy:
    type: RollingUpdate
  serviceName: "dynamodb"
  replicas: 1
  selector:
    matchLabels:
      app: dynamodb
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
      labels:
        name: dynamodb
        app: dynamodb
    spec:
      terminationGracePeriodSeconds: 60
      automountServiceAccountToken: false
      enableServiceLinks: false
      restartPolicy: Always
      securityContext:
        runAsGroup: 1000
        runAsUser: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - image: docker.io/saidsef/aws-dynamodb-local:v2022.10
          command:
          - "java"
          args:
          - "-jar"
          - "DynamoDBLocal.jar"
          - "-sharedDb"
          - "-dbPath"
          - "/data"
          imagePullPolicy: Always
          tty: true
          name: dynamodb
          env:
          - name: AWS_DEFAULT_REGION
            value: "local"
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: AWS_ENDPOINT_URL
            value: $(POD_NAME).$(NAMESPACE)
          ports:
            - protocol: TCP
              containerPort: 8000
              name: dynamodb
          resources:
            requests:
              memory: 512Mi
              cpu: 100m
            limits:
              memory: 1Gi
              cpu: 200m
          volumeMounts:
            - name: storage
              mountPath: /data
              subPath: data
              readOnly: false
          livenessProbe:
            tcpSocket:
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 2
            timeoutSeconds: 3
          readinessProbe:
            tcpSocket:
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 2
            timeoutSeconds: 3
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            capabilities:
             drop:
               - ALL
             add:
               - NET_BIND_SERVICE
      volumes:
        - name: storage
          emptyDir: {}
